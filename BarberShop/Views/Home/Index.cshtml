@model RandevuViewModel

<div class="appointment-form">
    <form asp-action="BekleyenRandevu" asp-controller="Appointments" method="post" class="form-inline">

        <!-- Ad Soyad -->
        <div class="form-group">
            <label asp-for="Appointment.FullName"></label>
            <input asp-for="Appointment.FullName" class="form-control" placeholder="Ad Soyad" />
            <span asp-validation-for="Appointment.FullName" class=" text-danger"></span>
        </div>


        <!-- Telefon -->
        <div class="form-group">
            <label asp-for="Appointment.PhoneNumber"></label>
            <input asp-for="Appointment.PhoneNumber" class="form-control" placeholder="(5xx)xxx-xx-xx" id="phone" />
            <span asp-validation-for="Appointment.PhoneNumber" class="text-danger"></span>
        </div>

        <!-- Hizmet -->
        <div class="form-group">
            <label asp-for="Appointment.HizmetId">Hizmet</label>
            <select asp-for="Appointment.HizmetId" id="hizmet" class="form-control">
                <option selected disabled>Hizmet Seçiniz</option>
                @foreach (var hizmet in Model.Hizmetler)
                {
                    <option value="@hizmet.Id">@hizmet.Ad</option>
                }
            </select>
            <span asp-validation-for="Appointment.HizmetId" class="text-danger"></span>
        </div>

        <!-- Personel -->
        <div class="form-group">
            <label asp-for="Appointment.PersonelId">Personel</label>
            <select asp-for="Appointment.PersonelId" id="personel" class="form-control">
                <option selected disabled>Personel Seçiniz</option>
            </select>
            <span asp-validation-for="Appointment.PersonelId" class="text-danger"></span>
        </div>


        <div class="form-group">
            <label asp-for="Appointment.Tarih"></label>
            <select asp-for="Appointment.Tarih" id="tarih" class="form-control">
                <option selected disabled>Tarih Seçiniz</option>
                @foreach (var date in ViewBag.NextSevenDays as List<DateTime>)
                {
                    <option value="@date.ToString("yyyy-MM-dd")">@date.ToString("dd MMM yyyy")</option>
                }
            </select>
            <span asp-validation-for="Appointment.Tarih" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Appointment.Saat">Saat Seçiniz</label>
            <select asp-for="Appointment.Saat" id="saat" class="form-control">
                <option selected disabled>Saat Seçiniz</option>
                </select>
            <span asp-validation-for="Appointment.Saat" class="text-danger"></span>
        </div>



        <!-- Gönder Butonu -->
        <div class="form-group">
            <button type="submit" class="btn btn-secondary">Randevu Al</button>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.getElementById("hizmet").addEventListener("change", function () {
            const hizmetId = this.value; // Seçilen Hizmet ID
            const personelSelect = document.getElementById("personel");

            // Mevcut seçenekleri temizle
            personelSelect.innerHTML = "<option selected disabled>Personel Seçiniz</option>";

            // Ajax ile personel listesini al
            fetch(`/Home/GetPersonelByHizmet?hizmetId=${hizmetId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        data.forEach(personel => {
                            const option = document.createElement("option");
                            option.value = personel.personelId;
                            option.textContent = personel.personelAd;
                            personelSelect.appendChild(option);
                        });
                    } else {
                        personelSelect.innerHTML = "<option selected disabled>Uygun personel bulunamadı</option>";
                    }
                })
                .catch(error => console.error('Error:', error));
        });
    </script>
    <script>
        document.getElementById("personel").addEventListener("change", updateAvailableHours);
        document.getElementById("tarih").addEventListener("change", updateAvailableHours);

        function updateAvailableHours() {
            const personelId = document.getElementById("personel").value; // Seçilen personel ID
            const tarih = document.getElementById("tarih").value; // Seçilen tarih
            const saatSelect = document.getElementById("saat");

            if (!personelId || !tarih) {
                return; // Personel veya tarih seçilmemişse saatleri güncellemeye gerek yok
            }

            // Saat seçeneklerini temizle
            saatSelect.innerHTML = "<option selected disabled>Saat Seçiniz</option>";

            // 9:00 - 19:00 arası saatler ekleyelim
            const allHours = [];
            for (let hour = 9; hour <= 19; hour++) {
                allHours.push(hour);
            }

            // Şu anki zamanı al
            const now = new Date();
            const currentHour = (now.getHours()+1);
            const currentDate = now.toISOString().split("T")[0]; // YYYY-MM-DD formatında

            // Dolu saatleri al
            fetch(`/Home/GetAvailableHours?personelId=${personelId}&tarih=${tarih}`)
                .then(response => response.json())
                .then(doluSaatler => {
                    // Öncelikle tüm saatleri ekleyelim
                    allHours.forEach(hour => {
                        const option = document.createElement("option");
                        option.value = `${hour.toString().padStart(2, '0')}:00:00`; // Backend'e uygun format
                        option.textContent = `${hour}:00`;

                        // Eğer saat dolu değilse ve şu anki saatten büyük ya da farklı bir tarihteyse, saat seçeneğini ekle
                        if (!doluSaatler.includes(hour) && (tarih !== currentDate || hour >= currentHour)) {
                            saatSelect.appendChild(option);
                        } else {
                            option.disabled = true; // Dolu ya da geçmiş saatleri devre dışı bırak
                        }
                    });
                })
                .catch(error => console.error('Error:', error));
        }
    </script>

    
}
